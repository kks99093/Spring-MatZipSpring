<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.koreait.matzip.rest.RestMapper">
	<!-- 내가 보고있는 화면범위에서 Restaurant 셀렉트 -->
	<select id="selRestList" parameterType="restPARAM" resultType="restDMI">
					<!-- 타입에 class명만 적을거면 mybatis-alias에서 alias등록을 해줘야함 -->
		SELECT i_rest, nm, lat, lng
		FROM t_restaurant
		WHERE lat BETWEEN #{sw_lat} AND #{ne_lat}
		AND lng BETWEEN #{sw_lng} AND #{ne_lng}
	</select>
	
	<!-- 레스토랑 인설트 -->
	<insert id="insRest" parameterType="RestPARAM">
		INSERT INTO t_restaurant
		(nm, addr, lat, lng, cd_category, i_user)
		VALUES
		(#{nm}, #{addr},#{lat}, #{lng}, #{cd_category}, #{i_user})
	</insert>
	
	<!-- 레스토랑 추천 메뉴 인설트 -->
	<insert id="insRestRegMenu" parameterType="RestRecMenuVO">
		INSERT INTO t_restaurant_recommend_menu
		(i_rest, seq, menu_nm, menu_price, menu_pic)
		SELECT 
		#{i_rest}, ifnull(max(seq), 0)+1, #{menu_nm}, #{menu_price}, #{menu_pic}
		FROM t_restaurant_recommend_menu
		WHERE i_rest = #{i_rest}
	</insert>
	
	<!-- 레스토랑 메뉴 인설트 -->
	<insert id="insMenus" parameterType="RestRecMenuVO">
		INSERT INTO t_restaurant_menu
		(i_rest, seq, menu_pic)
		SELECT
		#{i_rest}, IFNULL(MAX(seq), 0)+1, #{menu_pic}
		FROM t_restaurant_menu
		WHERE i_rest = #{i_rest}
	</insert>
	
	<!-- 조회수 올리기 -->
	<update id="updHits">
		UPDATE t_restaurant
		SET hits = hits+1
		WHERE i_rest = #{i_rest};
	</update>
	
	<!-- i_user를 얻어오기위해서 계속 selRest를 부르면 너무 낭비(?)가 심해서 간단하게 i_user만 얻어노느걸로 한개 만듬 -->
	<select id="selRestChkUser" parameterType="Integer" resultType="Integer">
		SELECT i_user FROM t_restaurant
		WHERE i_rest = #{i_rest}
	</select>
	
	<!-- 디테일 셀렉트 -->
	<select id="selRest" parameterType="restPARAM" resultType="restDMI">
		SELECT 
			A.i_rest, A.nm, A.lat, A.lng, A.addr, A.i_user, A.hits
			, ifnull(B.val,'') as cd_category_nm
			, C.nm as user_nm
			, ifnull(D.cnt,0) as cnt_favorite
		FROM t_restaurant A
		INNER JOIN c_code_d B
			ON A.cd_category = B.cd
			AND B.i_m = 1
		LEFT JOIN t_user C
			ON A.i_user = C.i_user
		LEFT JOIN(
			SELECT i_Rest, COUNT(i_rest) as cnt
			FROM t_user_favorite
			WHERE i_rest = #{i_rest}
		) D
		ON A.i_rest = D.i_rest
		WHERE A.i_rest = #{i_rest}
	</select>
	
	<!-- 추천메뉴 셀렉트 -->
	<select id="selRestRecMenus" parameterType="RestPARAM" resultType="RestRecMenuVO">
		SELECT A.seq, A.menu_nm, A.menu_price, A.menu_pic
		FROM t_restaurant_recommend_menu A
		WHERE A.i_rest = #{i_rest}
		<if test="seq > 0">
			AND A.seq = #{seq}
		</if>
		<!-- 리스트를 불러올때는 i_user, seq 둘다 0임, 삭제하기위해 정보를 얻어올때는 저거 두개가 1이상이됨 -->
		<!-- 만약 내가 쓴글이 아닌데 삭제할 정보를 얻으려고 요청하면 0개의 글이 넘어옴 -->
	</select>
	
	<!-- 메뉴 셀렉트 -->
	<select id="selRestMenus" parameterType="RestPARAM" resultType="RestRecMenuVO">
		SELECT A.seq, A.menu_pic
		FROM t_restaurant_menu A
		WHERE i_rest = #{i_rest}
		<if test="seq > 0">
			AND A.seq = #{seq}
		</if>
	</select>
	
	
	<!-- 레스토랑 딜리트 -->
	<!-- foreginKey가 갈려있기때문에 참조되어있는애를 다 삭제해야함 -->
	<!-- 트렌잭션 여러작업을 하나로 묶는다 (추천메뉴,메뉴,레스토랑 다삭제해야하기때문에 트렌잭션을 검),
	트랜잭션은 하나하나 지우다가(추천메뉴->메뉴->레스토랑순서로) 실패하면 다시 롤백함-->
	<!--추천메뉴 삭제-->
	<delete id="delRestRecMenu" parameterType="restPARAM">
		DELETE A FROM t_restaurant_recommend_menu A
		INNER JOIN t_restaurant B
		ON A.i_rest = B.i_rest
		WHERE B.i_rest = #{i_rest}
		AND B.i_user = #{i_user}
		<if test="seq > 0">
			AND A.seq = #{seq}
		</if>
	</delete>
	
	<!-- 메뉴 삭제 -->
	<delete id="delRestMenu" parameterType="restPARAM">
		DELETE A FROM t_restaurant_menu A
		INNER JOIN t_restaurant B
		ON A.i_rest = B.i_rest
		WHERE B.i_rest = #{i_rest}
		AND B.i_user = #{i_user}
		<if test="seq > 0">
			AND A.seq = #{seq}
		</if>
	</delete>
	
	<!-- 레스토랑 삭제 -->
	<delete id="delRest" parameterType="restPARAM">
		DELETE FROM t_restaurant
		WHERE i_rest = #{i_rest} 
		AND i_user = #{i_user}
	</delete>
	
	
</mapper>
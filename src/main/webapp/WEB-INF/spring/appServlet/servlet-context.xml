<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<context:property-placeholder location="classpath:config.properties"/>
	<!-- classpath:는 resources 아래라는뜻, 다른쪽에 갖다놓고싶으면 /WEB-INF/Views/config.properties 이런식으로 적어주면됨 -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- class위에 @를 적는건 99% bean등록 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/res/**" location="/resources/" />
	<!-- res로 접근하는애들은 전부 resources로 보낸다는것 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 얘는 spring에서 스는 이노테이션 -->
	<context:component-scan base-package="com.koreait.matzip" />
	<!-- 에노테이션 붙은애들을 전부 스캔함 -->
	
	<!-- property는 메소드(set), constructior는 생성자로 값을넣음 -->
	<!-- value는 값을 넣는거고 ref는 참조하는것(bean생성으로 만들어놓은것만 참조 가능) -->
	
	<!-- DB연결 ConnectionPull 제작 -->
	<beans:bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	    <beans:property name="poolName" value="springHikariCP" />
	    <beans:property name="connectionTestQuery" value="SELECT 1 FROM DUAL" />
	    <beans:property name="driverClassName" value="${db.driver}" />
	    <beans:property name="maximumPoolSize" value="10" />
	    <beans:property name="idleTimeout" value="5000" />
	    
	    <beans:property name="jdbcUrl" value="${db.url}"/>
		<beans:property name="username" value="${db.username}"/>
		<beans:property name="password" value="${db.password}"/>
		<!-- src/main/resources에 config.properties를 만들어서 db.%!@%로 설정해놓고 여기서 참조해서 씀 (${db.%!@%})-->
		<!-- <context:property-placeholder location="classpath:config.properties"/> 위에 이거적어줘야함 -->
	</beans:bean>
	
	<beans:bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<beans:constructor-arg ref="hikariConfig"/>
		<!-- ref(참조)에는 생성해놓은 bean의 id값을 적어야함 -->
	</beans:bean>
	
	<!-- 마이바티스 설정 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/> 
		<beans:property name="configLocation" value="/WEB-INF/spring/mybatis-alias.xml"/>
		<!-- /WEB-INF/spring/mybatis-alias.xml 파일 만들어줘야함/ 저파일을 configLocation에다가 넣음 -->
	</beans:bean>
	
	<!-- 마이바티스의 스캔, 마이바티스가쓰는 이노테이션 (@mapper) -->
	<mybatis-spring:scan base-package="com.koreait.matzip"/>
	<!-- 마이바티스는 DAO를 bean등록함 -->
	
	<!-- 트랜잭션 사용 Namespaces에서 tx 추가(tx:annotation-driven을 쓰기때문) -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	<!-- 오토커밋을 끊다음에 에러가 터진다면 백업위치로 돌아가고 안터지면 커밋을 날린다(라는 것을 @Transactional이 적힌곳에 넣어준다) -->
	</beans:bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 로그인 유무 체크할때 쓰는 인터셉터 -->
	<interceptors>
		<interceptor>
		<!-- **해줘야함 -->
			<mapping path="/**"/>
			<beans:bean class="com.koreait.matzip.LoginCheckInterceptor"/>
		</interceptor>
	</interceptors>	
	
	<!-- 파일 업로드 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 최대 사이즈 -->
	<beans:property name="maxUploadSize" value="10485760"/> <!-- 10MB -->
	</beans:bean>
	
</beans:beans>
